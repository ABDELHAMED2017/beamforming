function [] = plotBeampatternPolar(thetaScanningAngles, beamPattern, dBmin, dBTicks, angleTicks)

fig = figure;

axResponse = gca;
axResponse.Visible = 'off';
hold(axResponse, 'on')
axis(axResponse, 'equal')
ylim(axResponse,[0 dBmin])
xlim(axResponse, [-dBmin dBmin])


%Set background color to white (inside half circle)
patch('XData', cos(0:pi/50:2*pi) * dBmin, ...
    'YData', sin(0:pi/50:2*pi) * dBmin,...
    'FaceColor', [1 1 1]);

%Plot angle spokes
for tick = angleTicks
    line(dBmin * [-sin(tick*pi/180) sin(tick*pi/180)], ...
        dBmin * [-cos(tick*pi/180) cos(tick*pi/180)], ...
    'LineStyle', '-', ...
    'Color', [1 1 1]*0.8, ...
    'LineWidth', 0.5);

    text((dBmin*1.08) * sin(tick*pi/180), ...
        (dBmin*1.08) * cos(tick*pi/180), ...
        [int2str(tick) '^\circ'],...
        'HorizontalAlignment', 'center', ...
        'fontSize', 10);
end

    
%Plot dB ticks
txtAngle = 10;
for tick = dBTicks
    line(cos(0:pi/50:2*pi)*(dBmin+tick), sin(0:pi/50:2*pi)*(dBmin+tick), ...
        'LineStyle', '-', ...
        'Color', [1 1 1]*0.8, ...
        'LineWidth', 0.5);
    
    text((dBmin+tick)*cos(txtAngle*pi/180), ...
        (dBmin+tick)*sin(txtAngle*pi/180), ...
        ['  ' num2str(tick)], ...
        'fontsize',8);
end
line(cos(0:pi/50:2*pi)*dBmin, sin(0:pi/50:2*pi)*dBmin, ...
    'LineStyle', '-', ...
    'Color', [0 0 0], ...
    'LineWidth', 1);
line([-dBmin dBmin], [0 0], ...
    'LineStyle', '-', ...
    'Color', [0 0 0], ...
    'LineWidth', 1);


xx = (beamPattern+dBmin) .* sin(thetaScanningAngles*pi/180);
yy = (beamPattern+dBmin) .* cos(thetaScanningAngles*pi/180);
    
plot(axResponse, xx, yy);